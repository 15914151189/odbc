% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Table.R
\docType{methods}
\name{odbconnect-tables}
\alias{dbWriteTable,OdbconnectConnection,character,data.frame-method}
\alias{odbconnect-tables}
\alias{sqlData,OdbconnectConnection-method}
\title{Convenience functions for reading/writing DBMS tables}
\usage{
\S4method{dbWriteTable}{OdbconnectConnection,character,data.frame}(conn, name,
  value, overwrite = FALSE, append = FALSE, ...)

\S4method{sqlData}{OdbconnectConnection}(con, value, row.names = NA,
  copy = TRUE, ...)
}
\arguments{
\item{conn}{a \code{\linkS4class{OdbconnectConnection}} object, produced by
\code{\link[DBI]{dbConnect}}}

\item{name}{a character string specifying a table name. Names will be
automatically quoted so you can use any sequence of characaters, not
just any valid bare table name.}

\item{value}{A data.frame to write to the database.}

\item{overwrite}{Allow overwriting the destination table. Cannot be
\code{TRUE} if \code{append} is also \code{TRUE}.}

\item{append}{Allow appending to the destination table. Cannot be
\code{TRUE} if \code{overwrite} is also \code{TRUE}.}

\item{...}{Other arguments used by individual methods.}

\item{con}{A database connection.}

\item{row.names}{Either \code{TRUE}, \code{FALSE}, \code{NA} or a string.

If \code{TRUE}, always translate row names to a column called "row_names".
If \code{FALSE}, never translate row names. If \code{NA}, translate
rownames only if they're a character vector.

A string is equivalent to \code{TRUE}, but allows you to override the
default name.

For backward compatibility, \code{NULL} is equivalent to \code{FALSE}.}

\item{copy}{If \code{TRUE}, serializes the data frame to a single string
and uses \code{COPY name FROM stdin}. This is fast, but not supported by
all postgres servers (e.g. Amazon's redshift). If \code{FALSE}, generates
a single SQL string. This is slower, but always supported.}
}
\description{
Convenience functions for reading/writing DBMS tables
}
\examples{
\dontrun{
library(DBI)
con <- dbConnect(odbconnect::odbconnect())
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars, temporary = TRUE)
dbReadTable(con, "mtcars")

dbListTables(con)
dbExistsTable(con, "mtcars")

# A zero row data frame just creates a table definition.
dbWriteTable(con, "mtcars2", mtcars[0, ], temporary = TRUE)
dbReadTable(con, "mtcars2")

dbDisconnect(con)
}
}

